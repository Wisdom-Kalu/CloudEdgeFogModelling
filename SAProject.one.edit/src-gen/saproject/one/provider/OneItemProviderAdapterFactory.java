/**
 */
package saproject.one.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import saproject.one.util.OneAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OneItemProviderAdapterFactory extends OneAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OneItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.EmbeddedFlashMemory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmbeddedFlashMemoryItemProvider embeddedFlashMemoryItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.EmbeddedFlashMemory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmbeddedFlashMemoryAdapter() {
		if (embeddedFlashMemoryItemProvider == null) {
			embeddedFlashMemoryItemProvider = new EmbeddedFlashMemoryItemProvider(this);
		}

		return embeddedFlashMemoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.SSDs} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SSDsItemProvider ssDsItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.SSDs}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSSDsAdapter() {
		if (ssDsItemProvider == null) {
			ssDsItemProvider = new SSDsItemProvider(this);
		}

		return ssDsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.NVMe} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NVMeItemProvider nvMeItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.NVMe}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNVMeAdapter() {
		if (nvMeItemProvider == null) {
			nvMeItemProvider = new NVMeItemProvider(this);
		}

		return nvMeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.IPFS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IPFSItemProvider ipfsItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.IPFS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIPFSAdapter() {
		if (ipfsItemProvider == null) {
			ipfsItemProvider = new IPFSItemProvider(this);
		}

		return ipfsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Document} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentItemProvider documentItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Document}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentAdapter() {
		if (documentItemProvider == null) {
			documentItemProvider = new DocumentItemProvider(this);
		}

		return documentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Column} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ColumnItemProvider columnItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Column}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createColumnAdapter() {
		if (columnItemProvider == null) {
			columnItemProvider = new ColumnItemProvider(this);
		}

		return columnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.KeyValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyValueItemProvider keyValueItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.KeyValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyValueAdapter() {
		if (keyValueItemProvider == null) {
			keyValueItemProvider = new KeyValueItemProvider(this);
		}

		return keyValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Graph} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GraphItemProvider graphItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Graph}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGraphAdapter() {
		if (graphItemProvider == null) {
			graphItemProvider = new GraphItemProvider(this);
		}

		return graphItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Historical} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HistoricalItemProvider historicalItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Historical}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHistoricalAdapter() {
		if (historicalItemProvider == null) {
			historicalItemProvider = new HistoricalItemProvider(this);
		}

		return historicalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.RealTime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealTimeItemProvider realTimeItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.RealTime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealTimeAdapter() {
		if (realTimeItemProvider == null) {
			realTimeItemProvider = new RealTimeItemProvider(this);
		}

		return realTimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Stream} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamItemProvider streamItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Stream}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamAdapter() {
		if (streamItemProvider == null) {
			streamItemProvider = new StreamItemProvider(this);
		}

		return streamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.TimeStamp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeStampItemProvider timeStampItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.TimeStamp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeStampAdapter() {
		if (timeStampItemProvider == null) {
			timeStampItemProvider = new TimeStampItemProvider(this);
		}

		return timeStampItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.DataLocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataLocationItemProvider dataLocationItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.DataLocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataLocationAdapter() {
		if (dataLocationItemProvider == null) {
			dataLocationItemProvider = new DataLocationItemProvider(this);
		}

		return dataLocationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.ProcessingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessingTypeItemProvider processingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.ProcessingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessingTypeAdapter() {
		if (processingTypeItemProvider == null) {
			processingTypeItemProvider = new ProcessingTypeItemProvider(this);
		}

		return processingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Batch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BatchItemProvider batchItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Batch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBatchAdapter() {
		if (batchItemProvider == null) {
			batchItemProvider = new BatchItemProvider(this);
		}

		return batchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.RealTimeProcessing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealTimeProcessingItemProvider realTimeProcessingItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.RealTimeProcessing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealTimeProcessingAdapter() {
		if (realTimeProcessingItemProvider == null) {
			realTimeProcessingItemProvider = new RealTimeProcessingItemProvider(this);
		}

		return realTimeProcessingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.StorageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StorageTypeItemProvider storageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.StorageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStorageTypeAdapter() {
		if (storageTypeItemProvider == null) {
			storageTypeItemProvider = new StorageTypeItemProvider(this);
		}

		return storageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.DataArchitecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataArchitectureItemProvider dataArchitectureItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.DataArchitecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataArchitectureAdapter() {
		if (dataArchitectureItemProvider == null) {
			dataArchitectureItemProvider = new DataArchitectureItemProvider(this);
		}

		return dataArchitectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Component} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentItemProvider componentItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Component}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentAdapter() {
		if (componentItemProvider == null) {
			componentItemProvider = new ComponentItemProvider(this);
		}

		return componentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.ComputingUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComputingUnitItemProvider computingUnitItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.ComputingUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComputingUnitAdapter() {
		if (computingUnitItemProvider == null) {
			computingUnitItemProvider = new ComputingUnitItemProvider(this);
		}

		return computingUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Cloud} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CloudItemProvider cloudItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Cloud}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCloudAdapter() {
		if (cloudItemProvider == null) {
			cloudItemProvider = new CloudItemProvider(this);
		}

		return cloudItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Fog} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FogItemProvider fogItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Fog}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFogAdapter() {
		if (fogItemProvider == null) {
			fogItemProvider = new FogItemProvider(this);
		}

		return fogItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Edge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EdgeItemProvider edgeItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Edge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEdgeAdapter() {
		if (edgeItemProvider == null) {
			edgeItemProvider = new EdgeItemProvider(this);
		}

		return edgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.LoadBalancer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadBalancerItemProvider loadBalancerItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.LoadBalancer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoadBalancerAdapter() {
		if (loadBalancerItemProvider == null) {
			loadBalancerItemProvider = new LoadBalancerItemProvider(this);
		}

		return loadBalancerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.NetworkProtocols} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NetworkProtocolsItemProvider networkProtocolsItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.NetworkProtocols}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNetworkProtocolsAdapter() {
		if (networkProtocolsItemProvider == null) {
			networkProtocolsItemProvider = new NetworkProtocolsItemProvider(this);
		}

		return networkProtocolsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.MQTT} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MQTTItemProvider mqttItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.MQTT}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMQTTAdapter() {
		if (mqttItemProvider == null) {
			mqttItemProvider = new MQTTItemProvider(this);
		}

		return mqttItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.TCP_IP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TCP_IPItemProvider tcP_IPItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.TCP_IP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTCP_IPAdapter() {
		if (tcP_IPItemProvider == null) {
			tcP_IPItemProvider = new TCP_IPItemProvider(this);
		}

		return tcP_IPItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.ConnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionTypeItemProvider connectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.ConnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionTypeAdapter() {
		if (connectionTypeItemProvider == null) {
			connectionTypeItemProvider = new ConnectionTypeItemProvider(this);
		}

		return connectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.PublisherSubscriberConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublisherSubscriberConnectionItemProvider publisherSubscriberConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.PublisherSubscriberConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublisherSubscriberConnectionAdapter() {
		if (publisherSubscriberConnectionItemProvider == null) {
			publisherSubscriberConnectionItemProvider = new PublisherSubscriberConnectionItemProvider(this);
		}

		return publisherSubscriberConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.ClientServerConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClientServerConnectionItemProvider clientServerConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.ClientServerConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClientServerConnectionAdapter() {
		if (clientServerConnectionItemProvider == null) {
			clientServerConnectionItemProvider = new ClientServerConnectionItemProvider(this);
		}

		return clientServerConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.PushPull} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PushPullItemProvider pushPullItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.PushPull}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPushPullAdapter() {
		if (pushPullItemProvider == null) {
			pushPullItemProvider = new PushPullItemProvider(this);
		}

		return pushPullItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.NodeBehavior} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeBehaviorItemProvider nodeBehaviorItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.NodeBehavior}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeBehaviorAdapter() {
		if (nodeBehaviorItemProvider == null) {
			nodeBehaviorItemProvider = new NodeBehaviorItemProvider(this);
		}

		return nodeBehaviorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.InDataPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InDataPortItemProvider inDataPortItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.InDataPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInDataPortAdapter() {
		if (inDataPortItemProvider == null) {
			inDataPortItemProvider = new InDataPortItemProvider(this);
		}

		return inDataPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.OutDataPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutDataPortItemProvider outDataPortItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.OutDataPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutDataPortAdapter() {
		if (outDataPortItemProvider == null) {
			outDataPortItemProvider = new OutDataPortItemProvider(this);
		}

		return outDataPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.DataPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataPortItemProvider dataPortItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.DataPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataPortAdapter() {
		if (dataPortItemProvider == null) {
			dataPortItemProvider = new DataPortItemProvider(this);
		}

		return dataPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.RequestResponse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestResponseItemProvider requestResponseItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.RequestResponse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestResponseAdapter() {
		if (requestResponseItemProvider == null) {
			requestResponseItemProvider = new RequestResponseItemProvider(this);
		}

		return requestResponseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.HTTP_HTTPS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HTTP_HTTPSItemProvider httP_HTTPSItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.HTTP_HTTPS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHTTP_HTTPSAdapter() {
		if (httP_HTTPSItemProvider == null) {
			httP_HTTPSItemProvider = new HTTP_HTTPSItemProvider(this);
		}

		return httP_HTTPSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.FTP} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FTPItemProvider ftpItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.FTP}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFTPAdapter() {
		if (ftpItemProvider == null) {
			ftpItemProvider = new FTPItemProvider(this);
		}

		return ftpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.PointToPoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PointToPointItemProvider pointToPointItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.PointToPoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPointToPointAdapter() {
		if (pointToPointItemProvider == null) {
			pointToPointItemProvider = new PointToPointItemProvider(this);
		}

		return pointToPointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.StreamProcessing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamProcessingItemProvider streamProcessingItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.StreamProcessing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamProcessingAdapter() {
		if (streamProcessingItemProvider == null) {
			streamProcessingItemProvider = new StreamProcessingItemProvider(this);
		}

		return streamProcessingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.AsynchronousRequestReply} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AsynchronousRequestReplyItemProvider asynchronousRequestReplyItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.AsynchronousRequestReply}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAsynchronousRequestReplyAdapter() {
		if (asynchronousRequestReplyItemProvider == null) {
			asynchronousRequestReplyItemProvider = new AsynchronousRequestReplyItemProvider(this);
		}

		return asynchronousRequestReplyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.WebSocket} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WebSocketItemProvider webSocketItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.WebSocket}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWebSocketAdapter() {
		if (webSocketItemProvider == null) {
			webSocketItemProvider = new WebSocketItemProvider(this);
		}

		return webSocketItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link saproject.one.MessageQueueing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageQueueingItemProvider messageQueueingItemProvider;

	/**
	 * This creates an adapter for a {@link saproject.one.MessageQueueing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageQueueingAdapter() {
		if (messageQueueingItemProvider == null) {
			messageQueueingItemProvider = new MessageQueueingItemProvider(this);
		}

		return messageQueueingItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (embeddedFlashMemoryItemProvider != null)
			embeddedFlashMemoryItemProvider.dispose();
		if (ssDsItemProvider != null)
			ssDsItemProvider.dispose();
		if (nvMeItemProvider != null)
			nvMeItemProvider.dispose();
		if (ipfsItemProvider != null)
			ipfsItemProvider.dispose();
		if (documentItemProvider != null)
			documentItemProvider.dispose();
		if (columnItemProvider != null)
			columnItemProvider.dispose();
		if (keyValueItemProvider != null)
			keyValueItemProvider.dispose();
		if (graphItemProvider != null)
			graphItemProvider.dispose();
		if (historicalItemProvider != null)
			historicalItemProvider.dispose();
		if (realTimeItemProvider != null)
			realTimeItemProvider.dispose();
		if (streamItemProvider != null)
			streamItemProvider.dispose();
		if (timeStampItemProvider != null)
			timeStampItemProvider.dispose();
		if (dataLocationItemProvider != null)
			dataLocationItemProvider.dispose();
		if (processingTypeItemProvider != null)
			processingTypeItemProvider.dispose();
		if (batchItemProvider != null)
			batchItemProvider.dispose();
		if (realTimeProcessingItemProvider != null)
			realTimeProcessingItemProvider.dispose();
		if (storageTypeItemProvider != null)
			storageTypeItemProvider.dispose();
		if (dataArchitectureItemProvider != null)
			dataArchitectureItemProvider.dispose();
		if (componentItemProvider != null)
			componentItemProvider.dispose();
		if (computingUnitItemProvider != null)
			computingUnitItemProvider.dispose();
		if (cloudItemProvider != null)
			cloudItemProvider.dispose();
		if (fogItemProvider != null)
			fogItemProvider.dispose();
		if (edgeItemProvider != null)
			edgeItemProvider.dispose();
		if (loadBalancerItemProvider != null)
			loadBalancerItemProvider.dispose();
		if (connectionItemProvider != null)
			connectionItemProvider.dispose();
		if (networkProtocolsItemProvider != null)
			networkProtocolsItemProvider.dispose();
		if (mqttItemProvider != null)
			mqttItemProvider.dispose();
		if (tcP_IPItemProvider != null)
			tcP_IPItemProvider.dispose();
		if (connectionTypeItemProvider != null)
			connectionTypeItemProvider.dispose();
		if (publisherSubscriberConnectionItemProvider != null)
			publisherSubscriberConnectionItemProvider.dispose();
		if (clientServerConnectionItemProvider != null)
			clientServerConnectionItemProvider.dispose();
		if (pushPullItemProvider != null)
			pushPullItemProvider.dispose();
		if (nodeBehaviorItemProvider != null)
			nodeBehaviorItemProvider.dispose();
		if (inDataPortItemProvider != null)
			inDataPortItemProvider.dispose();
		if (outDataPortItemProvider != null)
			outDataPortItemProvider.dispose();
		if (dataPortItemProvider != null)
			dataPortItemProvider.dispose();
		if (requestResponseItemProvider != null)
			requestResponseItemProvider.dispose();
		if (httP_HTTPSItemProvider != null)
			httP_HTTPSItemProvider.dispose();
		if (ftpItemProvider != null)
			ftpItemProvider.dispose();
		if (pointToPointItemProvider != null)
			pointToPointItemProvider.dispose();
		if (streamProcessingItemProvider != null)
			streamProcessingItemProvider.dispose();
		if (asynchronousRequestReplyItemProvider != null)
			asynchronousRequestReplyItemProvider.dispose();
		if (webSocketItemProvider != null)
			webSocketItemProvider.dispose();
		if (messageQueueingItemProvider != null)
			messageQueueingItemProvider.dispose();
	}

}
