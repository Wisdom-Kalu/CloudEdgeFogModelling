package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAPI = createDescriptorForAPI();
  /*package*/ final ConceptDescriptor myConceptAction = createDescriptorForAction();
  /*package*/ final ConceptDescriptor myConceptAggregate = createDescriptorForAggregate();
  /*package*/ final ConceptDescriptor myConceptAnalysingData = createDescriptorForAnalysingData();
  /*package*/ final ConceptDescriptor myConceptArchive = createDescriptorForArchive();
  /*package*/ final ConceptDescriptor myConceptAsynchronousRequestReply = createDescriptorForAsynchronousRequestReply();
  /*package*/ final ConceptDescriptor myConceptBatch = createDescriptorForBatch();
  /*package*/ final ConceptDescriptor myConceptClassify = createDescriptorForClassify();
  /*package*/ final ConceptDescriptor myConceptCleaning = createDescriptorForCleaning();
  /*package*/ final ConceptDescriptor myConceptClientServerConnection = createDescriptorForClientServerConnection();
  /*package*/ final ConceptDescriptor myConceptCloud = createDescriptorForCloud();
  /*package*/ final ConceptDescriptor myConceptColumn = createDescriptorForColumn();
  /*package*/ final ConceptDescriptor myConceptComponent = createDescriptorForComponent();
  /*package*/ final ConceptDescriptor myConceptComponentBehavior = createDescriptorForComponentBehavior();
  /*package*/ final ConceptDescriptor myConceptCompress = createDescriptorForCompress();
  /*package*/ final ConceptDescriptor myConceptComputingUnit = createDescriptorForComputingUnit();
  /*package*/ final ConceptDescriptor myConceptConnection = createDescriptorForConnection();
  /*package*/ final ConceptDescriptor myConceptConnectionType = createDescriptorForConnectionType();
  /*package*/ final ConceptDescriptor myConceptConsumingData = createDescriptorForConsumingData();
  /*package*/ final ConceptDescriptor myConceptDataArchitecture = createDescriptorForDataArchitecture();
  /*package*/ final ConceptDescriptor myConceptDataGeneration = createDescriptorForDataGeneration();
  /*package*/ final ConceptDescriptor myConceptDataIngestion = createDescriptorForDataIngestion();
  /*package*/ final ConceptDescriptor myConceptDataLinkableElement = createDescriptorForDataLinkableElement();
  /*package*/ final ConceptDescriptor myConceptDataLocation = createDescriptorForDataLocation();
  /*package*/ final ConceptDescriptor myConceptDataPort = createDescriptorForDataPort();
  /*package*/ final ConceptDescriptor myConceptDataProcessing = createDescriptorForDataProcessing();
  /*package*/ final ConceptDescriptor myConceptDescribe = createDescriptorForDescribe();
  /*package*/ final ConceptDescriptor myConceptDiagnoze = createDescriptorForDiagnoze();
  /*package*/ final ConceptDescriptor myConceptDocument = createDescriptorForDocument();
  /*package*/ final ConceptDescriptor myConceptEdge = createDescriptorForEdge();
  /*package*/ final ConceptDescriptor myConceptEmbeddedFlashMemory = createDescriptorForEmbeddedFlashMemory();
  /*package*/ final ConceptDescriptor myConceptEvent = createDescriptorForEvent();
  /*package*/ final ConceptDescriptor myConceptFTP = createDescriptorForFTP();
  /*package*/ final ConceptDescriptor myConceptFileSystems = createDescriptorForFileSystems();
  /*package*/ final ConceptDescriptor myConceptFilter = createDescriptorForFilter();
  /*package*/ final ConceptDescriptor myConceptFog = createDescriptorForFog();
  /*package*/ final ConceptDescriptor myConceptGovern = createDescriptorForGovern();
  /*package*/ final ConceptDescriptor myConceptGraph = createDescriptorForGraph();
  /*package*/ final ConceptDescriptor myConceptHTTP_HTTPS = createDescriptorForHTTP_HTTPS();
  /*package*/ final ConceptDescriptor myConceptHistorical = createDescriptorForHistorical();
  /*package*/ final ConceptDescriptor myConceptIPFS = createDescriptorForIPFS();
  /*package*/ final ConceptDescriptor myConceptIdentify = createDescriptorForIdentify();
  /*package*/ final ConceptDescriptor myConceptInDataPort = createDescriptorForInDataPort();
  /*package*/ final ConceptDescriptor myConceptIntegrate = createDescriptorForIntegrate();
  /*package*/ final ConceptDescriptor myConceptKeyValue = createDescriptorForKeyValue();
  /*package*/ final ConceptDescriptor myConceptLink = createDescriptorForLink();
  /*package*/ final ConceptDescriptor myConceptLoadBalancer = createDescriptorForLoadBalancer();
  /*package*/ final ConceptDescriptor myConceptLocalStorage = createDescriptorForLocalStorage();
  /*package*/ final ConceptDescriptor myConceptMQTT = createDescriptorForMQTT();
  /*package*/ final ConceptDescriptor myConceptMath_Operation = createDescriptorForMath_Operation();
  /*package*/ final ConceptDescriptor myConceptMerge = createDescriptorForMerge();
  /*package*/ final ConceptDescriptor myConceptMessageQueueing = createDescriptorForMessageQueueing();
  /*package*/ final ConceptDescriptor myConceptNVMe = createDescriptorForNVMe();
  /*package*/ final ConceptDescriptor myConceptNetworkProtocols = createDescriptorForNetworkProtocols();
  /*package*/ final ConceptDescriptor myConceptNewSQL = createDescriptorForNewSQL();
  /*package*/ final ConceptDescriptor myConceptNoSQL = createDescriptorForNoSQL();
  /*package*/ final ConceptDescriptor myConceptOutDataPort = createDescriptorForOutDataPort();
  /*package*/ final ConceptDescriptor myConceptPointToPoint = createDescriptorForPointToPoint();
  /*package*/ final ConceptDescriptor myConceptPredict = createDescriptorForPredict();
  /*package*/ final ConceptDescriptor myConceptPrescript = createDescriptorForPrescript();
  /*package*/ final ConceptDescriptor myConceptProcessingType = createDescriptorForProcessingType();
  /*package*/ final ConceptDescriptor myConceptPublisherSubscriberConnection = createDescriptorForPublisherSubscriberConnection();
  /*package*/ final ConceptDescriptor myConceptPushPull = createDescriptorForPushPull();
  /*package*/ final ConceptDescriptor myConceptQualitative = createDescriptorForQualitative();
  /*package*/ final ConceptDescriptor myConceptQuantitative = createDescriptorForQuantitative();
  /*package*/ final ConceptDescriptor myConceptQueryReport = createDescriptorForQueryReport();
  /*package*/ final ConceptDescriptor myConceptRealTime = createDescriptorForRealTime();
  /*package*/ final ConceptDescriptor myConceptReal_Time = createDescriptorForReal_Time();
  /*package*/ final ConceptDescriptor myConceptReceiveData = createDescriptorForReceiveData();
  /*package*/ final ConceptDescriptor myConceptReduceNoise = createDescriptorForReduceNoise();
  /*package*/ final ConceptDescriptor myConceptRequestResponse = createDescriptorForRequestResponse();
  /*package*/ final ConceptDescriptor myConceptRetrieve = createDescriptorForRetrieve();
  /*package*/ final ConceptDescriptor myConceptSSDs = createDescriptorForSSDs();
  /*package*/ final ConceptDescriptor myConceptSave = createDescriptorForSave();
  /*package*/ final ConceptDescriptor myConceptSendData = createDescriptorForSendData();
  /*package*/ final ConceptDescriptor myConceptSort = createDescriptorForSort();
  /*package*/ final ConceptDescriptor myConceptStatistical = createDescriptorForStatistical();
  /*package*/ final ConceptDescriptor myConceptStorageType = createDescriptorForStorageType();
  /*package*/ final ConceptDescriptor myConceptStoringData = createDescriptorForStoringData();
  /*package*/ final ConceptDescriptor myConceptStream = createDescriptorForStream();
  /*package*/ final ConceptDescriptor myConceptStreamProcessing = createDescriptorForStreamProcessing();
  /*package*/ final ConceptDescriptor myConceptTCP_IP = createDescriptorForTCP_IP();
  /*package*/ final ConceptDescriptor myConceptTechnique = createDescriptorForTechnique();
  /*package*/ final ConceptDescriptor myConceptTimeStamp = createDescriptorForTimeStamp();
  /*package*/ final ConceptDescriptor myConceptTransform = createDescriptorForTransform();
  /*package*/ final ConceptDescriptor myConceptTransforme = createDescriptorForTransforme();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final ConceptDescriptor myConceptValidate = createDescriptorForValidate();
  /*package*/ final ConceptDescriptor myConceptVisualize = createDescriptorForVisualize();
  /*package*/ final ConceptDescriptor myConceptWebSocket = createDescriptorForWebSocket();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAPI, myConceptAction, myConceptAggregate, myConceptAnalysingData, myConceptArchive, myConceptAsynchronousRequestReply, myConceptBatch, myConceptClassify, myConceptCleaning, myConceptClientServerConnection, myConceptCloud, myConceptColumn, myConceptComponent, myConceptComponentBehavior, myConceptCompress, myConceptComputingUnit, myConceptConnection, myConceptConnectionType, myConceptConsumingData, myConceptDataArchitecture, myConceptDataGeneration, myConceptDataIngestion, myConceptDataLinkableElement, myConceptDataLocation, myConceptDataPort, myConceptDataProcessing, myConceptDescribe, myConceptDiagnoze, myConceptDocument, myConceptEdge, myConceptEmbeddedFlashMemory, myConceptEvent, myConceptFTP, myConceptFileSystems, myConceptFilter, myConceptFog, myConceptGovern, myConceptGraph, myConceptHTTP_HTTPS, myConceptHistorical, myConceptIPFS, myConceptIdentify, myConceptInDataPort, myConceptIntegrate, myConceptKeyValue, myConceptLink, myConceptLoadBalancer, myConceptLocalStorage, myConceptMQTT, myConceptMath_Operation, myConceptMerge, myConceptMessageQueueing, myConceptNVMe, myConceptNetworkProtocols, myConceptNewSQL, myConceptNoSQL, myConceptOutDataPort, myConceptPointToPoint, myConceptPredict, myConceptPrescript, myConceptProcessingType, myConceptPublisherSubscriberConnection, myConceptPushPull, myConceptQualitative, myConceptQuantitative, myConceptQueryReport, myConceptRealTime, myConceptReal_Time, myConceptReceiveData, myConceptReduceNoise, myConceptRequestResponse, myConceptRetrieve, myConceptSSDs, myConceptSave, myConceptSendData, myConceptSort, myConceptStatistical, myConceptStorageType, myConceptStoringData, myConceptStream, myConceptStreamProcessing, myConceptTCP_IP, myConceptTechnique, myConceptTimeStamp, myConceptTransform, myConceptTransforme, myConceptType, myConceptValidate, myConceptVisualize, myConceptWebSocket);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.API:
        return myConceptAPI;
      case LanguageConceptSwitch.Action:
        return myConceptAction;
      case LanguageConceptSwitch.Aggregate:
        return myConceptAggregate;
      case LanguageConceptSwitch.AnalysingData:
        return myConceptAnalysingData;
      case LanguageConceptSwitch.Archive:
        return myConceptArchive;
      case LanguageConceptSwitch.AsynchronousRequestReply:
        return myConceptAsynchronousRequestReply;
      case LanguageConceptSwitch.Batch:
        return myConceptBatch;
      case LanguageConceptSwitch.Classify:
        return myConceptClassify;
      case LanguageConceptSwitch.Cleaning:
        return myConceptCleaning;
      case LanguageConceptSwitch.ClientServerConnection:
        return myConceptClientServerConnection;
      case LanguageConceptSwitch.Cloud:
        return myConceptCloud;
      case LanguageConceptSwitch.Column:
        return myConceptColumn;
      case LanguageConceptSwitch.Component:
        return myConceptComponent;
      case LanguageConceptSwitch.ComponentBehavior:
        return myConceptComponentBehavior;
      case LanguageConceptSwitch.Compress:
        return myConceptCompress;
      case LanguageConceptSwitch.ComputingUnit:
        return myConceptComputingUnit;
      case LanguageConceptSwitch.Connection:
        return myConceptConnection;
      case LanguageConceptSwitch.ConnectionType:
        return myConceptConnectionType;
      case LanguageConceptSwitch.ConsumingData:
        return myConceptConsumingData;
      case LanguageConceptSwitch.DataArchitecture:
        return myConceptDataArchitecture;
      case LanguageConceptSwitch.DataGeneration:
        return myConceptDataGeneration;
      case LanguageConceptSwitch.DataIngestion:
        return myConceptDataIngestion;
      case LanguageConceptSwitch.DataLinkableElement:
        return myConceptDataLinkableElement;
      case LanguageConceptSwitch.DataLocation:
        return myConceptDataLocation;
      case LanguageConceptSwitch.DataPort:
        return myConceptDataPort;
      case LanguageConceptSwitch.DataProcessing:
        return myConceptDataProcessing;
      case LanguageConceptSwitch.Describe:
        return myConceptDescribe;
      case LanguageConceptSwitch.Diagnoze:
        return myConceptDiagnoze;
      case LanguageConceptSwitch.Document:
        return myConceptDocument;
      case LanguageConceptSwitch.Edge:
        return myConceptEdge;
      case LanguageConceptSwitch.EmbeddedFlashMemory:
        return myConceptEmbeddedFlashMemory;
      case LanguageConceptSwitch.Event:
        return myConceptEvent;
      case LanguageConceptSwitch.FTP:
        return myConceptFTP;
      case LanguageConceptSwitch.FileSystems:
        return myConceptFileSystems;
      case LanguageConceptSwitch.Filter:
        return myConceptFilter;
      case LanguageConceptSwitch.Fog:
        return myConceptFog;
      case LanguageConceptSwitch.Govern:
        return myConceptGovern;
      case LanguageConceptSwitch.Graph:
        return myConceptGraph;
      case LanguageConceptSwitch.HTTP_HTTPS:
        return myConceptHTTP_HTTPS;
      case LanguageConceptSwitch.Historical:
        return myConceptHistorical;
      case LanguageConceptSwitch.IPFS:
        return myConceptIPFS;
      case LanguageConceptSwitch.Identify:
        return myConceptIdentify;
      case LanguageConceptSwitch.InDataPort:
        return myConceptInDataPort;
      case LanguageConceptSwitch.Integrate:
        return myConceptIntegrate;
      case LanguageConceptSwitch.KeyValue:
        return myConceptKeyValue;
      case LanguageConceptSwitch.Link:
        return myConceptLink;
      case LanguageConceptSwitch.LoadBalancer:
        return myConceptLoadBalancer;
      case LanguageConceptSwitch.LocalStorage:
        return myConceptLocalStorage;
      case LanguageConceptSwitch.MQTT:
        return myConceptMQTT;
      case LanguageConceptSwitch.Math_Operation:
        return myConceptMath_Operation;
      case LanguageConceptSwitch.Merge:
        return myConceptMerge;
      case LanguageConceptSwitch.MessageQueueing:
        return myConceptMessageQueueing;
      case LanguageConceptSwitch.NVMe:
        return myConceptNVMe;
      case LanguageConceptSwitch.NetworkProtocols:
        return myConceptNetworkProtocols;
      case LanguageConceptSwitch.NewSQL:
        return myConceptNewSQL;
      case LanguageConceptSwitch.NoSQL:
        return myConceptNoSQL;
      case LanguageConceptSwitch.OutDataPort:
        return myConceptOutDataPort;
      case LanguageConceptSwitch.PointToPoint:
        return myConceptPointToPoint;
      case LanguageConceptSwitch.Predict:
        return myConceptPredict;
      case LanguageConceptSwitch.Prescript:
        return myConceptPrescript;
      case LanguageConceptSwitch.ProcessingType:
        return myConceptProcessingType;
      case LanguageConceptSwitch.PublisherSubscriberConnection:
        return myConceptPublisherSubscriberConnection;
      case LanguageConceptSwitch.PushPull:
        return myConceptPushPull;
      case LanguageConceptSwitch.Qualitative:
        return myConceptQualitative;
      case LanguageConceptSwitch.Quantitative:
        return myConceptQuantitative;
      case LanguageConceptSwitch.QueryReport:
        return myConceptQueryReport;
      case LanguageConceptSwitch.RealTime:
        return myConceptRealTime;
      case LanguageConceptSwitch.Real_Time:
        return myConceptReal_Time;
      case LanguageConceptSwitch.ReceiveData:
        return myConceptReceiveData;
      case LanguageConceptSwitch.ReduceNoise:
        return myConceptReduceNoise;
      case LanguageConceptSwitch.RequestResponse:
        return myConceptRequestResponse;
      case LanguageConceptSwitch.Retrieve:
        return myConceptRetrieve;
      case LanguageConceptSwitch.SSDs:
        return myConceptSSDs;
      case LanguageConceptSwitch.Save:
        return myConceptSave;
      case LanguageConceptSwitch.SendData:
        return myConceptSendData;
      case LanguageConceptSwitch.Sort:
        return myConceptSort;
      case LanguageConceptSwitch.Statistical:
        return myConceptStatistical;
      case LanguageConceptSwitch.StorageType:
        return myConceptStorageType;
      case LanguageConceptSwitch.StoringData:
        return myConceptStoringData;
      case LanguageConceptSwitch.Stream:
        return myConceptStream;
      case LanguageConceptSwitch.StreamProcessing:
        return myConceptStreamProcessing;
      case LanguageConceptSwitch.TCP_IP:
        return myConceptTCP_IP;
      case LanguageConceptSwitch.Technique:
        return myConceptTechnique;
      case LanguageConceptSwitch.TimeStamp:
        return myConceptTimeStamp;
      case LanguageConceptSwitch.Transform:
        return myConceptTransform;
      case LanguageConceptSwitch.Transforme:
        return myConceptTransforme;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      case LanguageConceptSwitch.Validate:
        return myConceptValidate;
      case LanguageConceptSwitch.Visualize:
        return myConceptVisualize;
      case LanguageConceptSwitch.WebSocket:
        return myConceptWebSocket;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAPI() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "API", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa9L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConsumingData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa6L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558953");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Action", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.class_(false, true, false);
    // extends: NewLanguage.structure.DataLinkableElement
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7aL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558916");
    b.version(3);
    b.associate("incomingAction", 0xe6c625abc8b2fc5L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f82L).optional(true).origin("1039313755865558981").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Aggregate", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa0L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558944");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAnalysingData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "AnalysingData", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8eL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558926");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArchive() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Archive", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa3L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.StoringData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa1L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558947");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAsynchronousRequestReply() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "AsynchronousRequestReply", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5473bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477819");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBatch() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Batch", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545eeL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ProcessingType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545ecL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477486");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClassify() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Classify", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558939");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCleaning() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Cleaning", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9eL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558942");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClientServerConnection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ClientServerConnection", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54726L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477798");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCloud() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Cloud", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5463bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataLocation
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545e9L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477563");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColumn() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Column", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545cbL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NoSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5458bL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477451");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComponent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Component", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5460bL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477515");
    b.version(3);
    b.associate("incoming", 0x7e0c8e534ef664b7L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461fL).optional(true).origin("9082791036957648055").done();
    b.associate("outgoing", 0x7e0c8e534ef664c3L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461fL).optional(true).origin("9082791036957648067").done();
    b.aggregate("computingunit", 0x7e0c8e534ed54617L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545daL).optional(false).ordered(true).multiple(true).origin("9082791036955477527").done();
    b.aggregate("dataport", 0x7e0c8e534ed54626L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461dL).optional(false).ordered(true).multiple(true).origin("9082791036955477542").done();
    b.aggregate("behavior", 0xe6c625abc8b2fabL).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f80L).optional(true).ordered(true).multiple(false).origin("1039313755865558955").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComponentBehavior() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ComponentBehavior", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f80L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558912");
    b.version(3);
    b.aggregate("link", 0xe6c625abc8bed27L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f82L).optional(false).ordered(true).multiple(true).origin("1039313755865607463").done();
    b.aggregate("datalinkable_element", 0xe6c625abc8c5dd9L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7aL).optional(false).ordered(true).multiple(true).origin("1039313755865636313").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCompress() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Compress", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f93L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataIngestion
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558931");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComputingUnit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ComputingUnit", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545daL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477466");
    b.version(3);
    b.aggregate("loadBalancer", 0x373852133ac5ba38L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5466eL).optional(true).ordered(true).multiple(false).origin("3979020513325726264").done();
    b.aggregate("locationtype", 0x7e0c8e534ef7a595L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545e9L).optional(false).ordered(true).multiple(false).origin("9082791036957730197").done();
    b.aggregate("storagetype", 0x373852133ac697f0L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x373852133ac681dbL).optional(false).ordered(true).multiple(true).origin("3979020513325783024").done();
    b.aggregate("processingType", 0x7e0c8e534ef7a59dL).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545ecL).optional(false).ordered(true).multiple(true).origin("9082791036957730205").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConnection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Connection", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477535");
    b.version(3);
    b.associate("destination", 0x7e0c8e534ef67c07L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54678L).optional(false).origin("9082791036957654023").done();
    b.associate("source", 0x7e0c8e534ef69353L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5467aL).optional(false).origin("9082791036957659987").done();
    b.associate("from", 0x7e0c8e534ef67c18L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5460bL).optional(true).origin("9082791036957654040").done();
    b.associate("to", 0x7e0c8e534ef67c22L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5460bL).optional(true).origin("9082791036957654050").done();
    b.aggregate("networkprotocols", 0x7e0c8e534ef76169L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54713L).optional(false).ordered(true).multiple(false).origin("9082791036957712745").done();
    b.aggregate("connectionType", 0x7e0c8e534ef76170L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL).optional(false).ordered(true).multiple(false).origin("9082791036957712752").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConnectionType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ConnectionType", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477790");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConsumingData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ConsumingData", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa6L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558950");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataArchitecture() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataArchitecture", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54601L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477505");
    b.version(3);
    b.aggregate("component", 0x7e0c8e534ef85d24L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5460bL).optional(false).ordered(true).multiple(true).origin("9082791036957777188").done();
    b.aggregate("links", 0x7e0c8e534ef87412L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461fL).optional(false).ordered(true).multiple(true).origin("9082791036957783058").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataGeneration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataGeneration", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f83L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558915");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataIngestion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataIngestion", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558929");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataLinkableElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataLinkableElement", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7aL);
    b.class_(false, true, false);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558906");
    b.version(3);
    b.associate("sourceLink", 0xe6c625abc8b2fbbL).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f82L).optional(false).origin("1039313755865558971").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataLocation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataLocation", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545e9L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477481");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataPort", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461dL);
    b.class_(false, false, false);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477533");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDataProcessing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "DataProcessing", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558940");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDescribe() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Describe", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8aL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Type
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8fL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558922");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDiagnoze() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Diagnoze", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Type
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8fL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558923");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDocument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Document", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545b2L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NoSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5458bL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477426");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Edge", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5464aL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataLocation
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545e9L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477578");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmbeddedFlashMemory() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "EmbeddedFlashMemory", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54536L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.LocalStorage
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54531L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477302");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEvent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Event", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7dL);
    b.class_(false, true, false);
    // extends: NewLanguage.structure.DataLinkableElement
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7aL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558909");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFTP() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "FTP", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54733L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NetworkProtocols
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54713L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477811");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFileSystems() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "FileSystems", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54572L);
    b.class_(false, true, false);
    // extends: NewLanguage.structure.StorageType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x373852133ac681dbL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477362");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFilter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Filter", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9aL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558938");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFog() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Fog", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54645L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataLocation
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545e9L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477573");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGovern() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Govern", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa2L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.StoringData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa1L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558946");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGraph() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Graph", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545cfL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NoSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5458bL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477455");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHTTP_HTTPS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "HTTP_HTTPS", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54730L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NetworkProtocols
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54713L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477808");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHistorical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Historical", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545d1L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NewSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54593L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477457");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIPFS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "IPFS", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5459cL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.FileSystems
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54572L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477404");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentify() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Identify", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f97L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataIngestion
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558935");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInDataPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "InDataPort", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54678L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataPort
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461dL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477624");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIntegrate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Integrate", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f92L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataIngestion
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558930");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForKeyValue() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "KeyValue", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545cdL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NoSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5458bL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477453");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLink() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Link", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f82L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558914");
    b.version(3);
    b.associate("outgoingLink", 0xe6c625abc8b2fb8L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7aL).optional(true).origin("1039313755865558968").done();
    b.associate("target", 0xe6c625abc8b2fc2L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L).optional(false).origin("1039313755865558978").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLoadBalancer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "LoadBalancer", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5466eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477614");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalStorage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "LocalStorage", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54531L);
    b.class_(false, true, false);
    // extends: NewLanguage.structure.StorageType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x373852133ac681dbL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477297");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMQTT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "MQTT", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NetworkProtocols
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54713L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477787");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMath_Operation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Math_Operation", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9dL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558941");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMerge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Merge", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f98L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558936");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMessageQueueing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "MessageQueueing", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54741L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477825");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNVMe() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NVMe", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5456bL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.LocalStorage
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54531L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477355");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNetworkProtocols() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NetworkProtocols", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54713L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477779");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewSQL() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NewSQL", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54593L);
    b.class_(false, true, false);
    // extends: NewLanguage.structure.StorageType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x373852133ac681dbL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477395");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNoSQL() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NoSQL", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5458bL);
    b.class_(false, true, false);
    // extends: NewLanguage.structure.StorageType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x373852133ac681dbL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477387");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutDataPort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "OutDataPort", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5467aL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataPort
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5461dL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477626");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPointToPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "PointToPoint", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54735L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477813");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredict() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Predict", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8cL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Type
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8fL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558924");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrescript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Prescript", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8dL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Type
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8fL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558925");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProcessingType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ProcessingType", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545ecL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477484");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPublisherSubscriberConnection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "PublisherSubscriberConnection", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54723L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477795");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPushPull() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "PushPull", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54729L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477801");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQualitative() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Qualitative", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f88L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Technique
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f86L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558920");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuantitative() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Quantitative", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f87L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Technique
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f86L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558919");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQueryReport() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "QueryReport", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa7L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConsumingData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa6L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558951");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRealTime() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "RealTime", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545f0L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ProcessingType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545ecL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477488");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReal_Time() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Real_Time", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54746L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NewSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54593L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477830");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReceiveData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ReceiveData", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7fL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Event
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f7dL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558911");
    b.version(3);
    b.associate("dataRecipient", 0xe6c625abc8b2fbdL).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545daL).optional(true).origin("1039313755865558973").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReduceNoise() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ReduceNoise", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f94L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataIngestion
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558932");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRequestResponse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "RequestResponse", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5472dL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477805");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRetrieve() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Retrieve", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa5L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.StoringData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa1L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558949");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSSDs() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "SSDs", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54553L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.LocalStorage
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54531L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477331");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSave() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Save", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa4L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.StoringData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa1L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558948");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSendData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "SendData", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f85L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558917");
    b.version(3);
    b.associate("dataRecipient", 0xe6c625abc8b2fc0L).target(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545daL).optional(true).origin("1039313755865558976").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSort() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Sort", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f99L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558937");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatistical() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Statistical", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f89L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Technique
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f86L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558921");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStorageType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "StorageType", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x373852133ac681dbL);
    b.class_(false, false, false);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/3979020513325777371");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStoringData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "StoringData", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa1L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.Action
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f84L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558945");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStream() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Stream", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545d6L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NewSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54593L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477462");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStreamProcessing() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "StreamProcessing", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54738L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477816");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTCP_IP() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "TCP_IP", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54718L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NetworkProtocols
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54713L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477784");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTechnique() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Technique", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f86L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.AnalysingData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558918");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTimeStamp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "TimeStamp", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed545d8L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.NewSQL
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed54593L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477464");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransform() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Transform", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f95L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataIngestion
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558933");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransforme() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Transforme", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fc9L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataProcessing
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f9cL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558985");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Type", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8fL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.AnalysingData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f8eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558927");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForValidate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Validate", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f96L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.DataIngestion
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2f91L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558934");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVisualize() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Visualize", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa8L);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConsumingData
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0xe6c625abc8b2fa6L);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/1039313755865558952");
    b.version(3);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWebSocket() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "WebSocket", 0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5473eL);
    b.class_(false, false, false);
    // extends: NewLanguage.structure.ConnectionType
    b.super_(0xacb8b23f2e494a72L, 0x81778145a5dc30fcL, 0x7e0c8e534ed5471eL);
    b.origin("r:2c8fbfd9-9601-4f4f-be90-35da5783e4b6(NewLanguage.structure)/9082791036955477822");
    b.version(3);
    return b.create();
  }
}
